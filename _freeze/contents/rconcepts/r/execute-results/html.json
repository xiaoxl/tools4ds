{
  "hash": "c1251335bcfa28c077fac25eb6ff08f8",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n   html:\n     code-line-numbers: false\n     code-block-border-left: false \n---\n\n\n\n# R Setup\n\n## RStudio\n\nFor R, the almost definite choice of IDE is RStudio. You may download and install it from [the homepage](https://posit.co/downloads/). The installation and beginning usage is straightforward. RStudio is using the default R console. \n\nAlthough the best R IDE is RStudio, there are still some people willing to try other options. In the rest part of this section I will briefly describe how to set up R environment using other IDES/platforms. \n\n## `radian`\n`radian` is an alternative console for the R program with multiline editing and rich syntax highlight. One would consider `radian` as a `IPython` clone for R, though its design is more aligned to [Julia](https://julialang.org/).\n\n`radian` is a R console. So to install it you should have an installation of R (version 3.4.0 or above). `radian` is mainly written in Python. Therefore to install it you should have an installation of Python (version 3.6 or above). Then you may use the following command to install `radian`.\n\n```{.bash}\nconda install -c conda-forge radian\n```\nor \n\n```{.bash}\npip install -U radian\n```\n\n\n### Use the console\nFirst find the path to the console. If you use `conda` to install `radian`, the path is `<anaconda path>/Scripts/radian.exe`. When you directly run the executable file `radian.exe`, the console will be activated. You may start to run R code.\n\n![](assests/img/20221206230701.png)  \n\nYou may use `q()` to exit `radian`.\n\n## VS Code Configuration\nThe main reference is [the official document](https://code.visualstudio.com/docs/languages/r).\n\n\nIf you would like to use VS Code as your main IDE for R, it is usually recommended to install the following components.\n\n1. R extension for VS Code by REditorSupport. You may get it through [this link](https://marketplace.visualstudio.com/items?itemName=REditorSupport.r), or search for it within VS Code.\n2. Install `languageserver` in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"languageserver\")\n```\n:::\n\n\n3. `radian`. This is an alternative R console introduced above. Note that to use `radian` in VS Code you need to set the `rterm` variable in VS Code setting to be the path of your `radian` installation.\n4. `httpgd`. This is a R package which is for better plotting in VS Code. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"httpgd\")\n```\n:::\n\n\nRunning R code is simply sending code to the R terminal. Before running R code, you could create an R terminal via command `R: Create R terminal` in the Command Palette. If you set `radian` path, this R terminal will be `radian`.\n\n\n::: {.callout-tip collapse=\"true\"}\nYou may adding the following Keyboard Shortcuts to VS Code. These are the same setting used in RStudio which are commonly used. The first two are using `alt+-` to produce `<-` and the latter two are using `ctrl+shift+m` to produce `%>%`.\n\n```{.json}\n{\n\"key\": \"alt+-\",\n\"command\": \"type\",\n\"when\": \"editorTextFocus && editorLangId =~ /r|rmd|qmd/\",\n\"args\": {\"text\": \" <- \"}\n},\n{\n\"key\": \"alt+-\",\n\"command\": \"workbench.action.terminal.sendSequence\",\n\"when\": \"terminalFocus\",\n\"args\": {\"text\": \" <- \"}\n},\n{\n\"key\": \"ctrl+shift+m\",\n\"command\": \"type\",\n\"when\": \"editorTextFocus && editorLangId =~ /r|rmd|quarto/\",\n\"args\": {\"text\": \" %>% \"}\n},\n{\n\"key\": \"ctrl+shift+m\",\n\"command\": \"workbench.action.terminal.sendSequence\",\n\"when\": \"terminalFocus\",\n\"args\": {\"text\": \" %>% \"}\n},\n```\n\n      \n:::\n\n\n\n## Cloud IDE options\nThere are tons of online IDEs that supports R. The following two are the biggest names.\n\n### Posit Cloud (formally RStudio Cloud)\nYou may directly go to the [homepage](https://posit.cloud/) to use RStudio from cloud. If you don't use it a lot it should be free.\n\n### Google Colab\nYou may use R in Google Colab. Note that by default R is disabled. You have to use a specific version of Google Colab through [colab.to/r](https://colab.research.google.com/notebook#create=true&language=r). After you get into the system, you may go to `Edit->Notebook settings` to change Runtime type to be `R`.\n\nThe rest is similar to Jupyter notebook, while the codes are now R codes.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}